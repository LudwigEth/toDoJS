@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: flex;
    flex-direction: column;
    height: 100vh;
    font-family: 'Roboto', sans-serif;
}

button {
    border: none;
    background-color: inherit;
    cursor: pointer;
}

button,
button:active,
button:focus,
.checkbox {
    -webkit-tap-highlight-color: transparent;
}

li::marker {
    color: #ffd1dc;
}

input {
    caret-color: #ffd1dc;
}

.no-scroll {
    overflow: hidden;
}

/* wrappers */

.wrapper-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: auto;
    width: 100%;
    background-color: #fafafa;
    transition: blur 0.42s ease-in-out;
}

.blur {
    filter: blur(0.1rem);
    transition: 0.42s ease-in-out;
}

.wrapper-centering {
    display: flex;
    justify-content: center;
    align-items: center;
}

.wrapper-dialog {
    display: flex;
    flex-direction: column;
    justify-content: start;
    gap: 1.2rem;
}

.wrapper-modal-categories {
    display: flex;
    flex-direction: column;
    max-width: 10rem;
    max-height: 8rem;
    gap: 1rem;
    justify-content: start;
    scrollbar-width: none;
    -ms-overflow-style: none;
    word-break: break-all;
}

.wrapper-modal-categories::-webkit-scrollbar {
    display: none;
}

.newToDoFormButtonWrapper {
    position: relative;
    display: flex;
    flex-wrap: wrap;
}

/* container */

/* #tag-bar {
    position: fixed;
} */

.main {
    transition: 0.42s ease-in-out;
}

.container {
    padding-top: 1.2rem;
    padding-bottom: 1rem;
}

.container,
.container-scroll-h,
.scroll-item-container,
.container-settings,
.main,
.navbar,
.navbar-item {
    display: flex;
    align-items: center;
    width: 100%;
}

.scroll-item-container {
    gap: 1rem;
}

/* scrollable container */

.container-scroll-h {
    justify-content: flex-start;
    flex: auto;
    overflow-x: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding-left: 1.2rem;
}

.container-scroll-h::-webkit-scrollbar {
    display: none;
}

.scroll-item {
    flex: 0 0 auto;
}

.active-tag {
    background-color: #b8d8be !important;
    transition: 0.1s ease-in-out;
}

.scroll-item button {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 0.2rem;
    background-color: #ffd1dc;
    border-radius: 1rem;
    padding: 0.33rem 0.66rem;
    font-size: 0.75rem;
    transition: 0.1s ease-in-out;
}

.scroll-item button div {
    background-color: palevioletred;
    width: 0.69rem;
}

.addNewCategoryContainer {
    position: relative;
    min-width: 100%;
    padding-right: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.addNewCategoryContainer button:last-child {
    background-color: #b8d8be;
}

.addNewCategoryContainer button:active {
    scale: 0.96;
    transition: 0.3s ease-in-out;
}

.addNewCategoryContainer path {
    stroke: #fff;
}

.grower {
    background-color: inherit;
    min-width: 0;
    transition: 0.2s ease-in-out;
}

.grow {
    min-width: 100%;
    transition: 0.2s ease-in-out;
}

.addNewCategoryInput {
    width: 100%;
    background-color: #eaeaea;
    border: none;
    height: 2rem;
    border-radius: 1rem;
    padding: 0 1rem;
}

.delete-button {
    display: flex;
    justify-content: center;
    align-items: center;
    max-width: fit-content;
    background-color: #ffd1dc !important;
}

.delete-button-l1,
.delete-button-l2 {
    height: 0.1rem;
    width: 1rem;
    background-color: #fff;
    border-radius: 0.05rem;
}

.delete-button-l1 {
    transform: rotate(45deg);
}

.delete-button-l2 {
    transform: rotate(90deg);
}


/* settings container */

.container-settings {
    justify-content: center;
    position: relative;
    display: flex;
    max-width: 2.2rem;
    box-shadow: -0.5rem 0 0.5rem -0.2rem #fafafa80;
    border-left: 0.1rem solid #b8b8b880;
    border-radius: 0.1rem;
    margin-left: auto;
}

.button-settings,
.button-menu,
.button-todo,
.button-calendar {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: 0.1337s;
    height: 2rem;
    width: 2rem;
}

.button-menu:active,
.button-todo:active,
.button-calendar:active {
    background-color: #ffd1dc80;
    padding: 2rem;
}

.hamburger-menu-dots,
.hamburger-menu-lines {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 0.168rem;
    border-radius: 50%;
    pointer-events: none;
    transition: 0.2s ease-in-out;
}

.spread {
    gap: 0.42rem;
    transition: 0.2s ease-in-out;
}

.hamburger-dots {
    border: 0.15rem solid #b8b8b8;
    border-radius: 50%;
}

/* main & to-do's */

main.wrapper-content {
    justify-content: start;
    align-items: start;
}

.to-do-container {
    display: flex;
    flex-direction: column;
    padding: 0 1.2rem 10rem;
    gap: 0.5rem;
    overflow: scroll;
    max-height: calc(100vh - 6rem);
    scroll-behavior: smooth;
}

.to-do-container,
.to-do-card {
    width: 100%;
}

.to-do-card {
    display: flex;
    align-items: center;
    justify-content: start;
    gap: 0.5rem;
    background-color: #eaeaea;
    border-radius: 0.5rem;
    padding: 1rem 0.5rem;
}

.checkbox {
    margin: auto;
    min-width: 1.2rem;
    min-height: 1.2rem;
    border: 0.1rem solid #ffd1dc;
    background-color: #fff;
    border-radius: 0.2rem;
    position: relative;
    cursor: pointer;
}

.checkmark1 {
    position: absolute;
    width: 0;
    height: 0.2rem;
    background-color: #fff;
    top: 40%;
    left: 3%;
    transform: rotate(45deg);
    transform-origin: left;
    border-radius: 0.1rem 0 0.1rem 0.1rem;
}

.checkmark2 {
    position: absolute;
    width: 0;
    height: 0.2rem;
    background-color: #fff;
    top: 0.1rem;
    left: calc(100% - 0.1rem);
    transform: rotate(-90deg);
    transform-origin: left;
    border-radius: 0 0.1rem 0.1rem 0.1rem;
}

.checkbox.checked {
    background-color: #ffd1dc;
    transition: 0.125s ease;
}

.checkbox.checked .checkmark1 {
    width: 0.5rem;
    transition: width 0.1s ease 0.2s;
}

.checkbox.checked .checkmark2 {
    width: 1rem;
    transition: width 0.1s ease 0.3s;
}

.to-do-card .to-do-menu {
    display: flex;
    align-self: flex-start;
    justify-content: center;
    padding: 0;
    min-height: 1.2rem;
    min-width: 1.2rem;
}

.to-do-menu .hamburger-dots {
    border-color: #ffd1dc;
}

.to-do-task-container {
    display: flex;
    flex-direction: column;
    flex: auto;
}

.to-do-task {
    font-weight: 500;
    font-size: 0.9rem;
    word-break: break-all;
}

.to-do-subtask {
    padding-left: 2rem;
    padding-top: 0.5rem;
}

.to-do-subtask button {
    position: relative;
    overflow: hidden;
    transition: 0.2s ease-in-out;
}

.to-do-subtask button::after {
    content: '';
    position: absolute;
    left: 0;
    top: 45%;
    width: 100%;
    height: 0.1rem;
    background: #b8d8be;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.2s ease-in-out;
}

.subtask-done {
    color: #00000088;
    transition: 0.2s ease-in-out;
}


.hidden {
    display: none !important;
}

.to-do-subtask button.subtask-done::after {
    transform: scaleX(1);
}



/* floating add new task button */

.button-fixed {
    position: fixed;
    bottom: 4.5rem;
    right: 1.3rem;
    height: 3rem;
    width: 3rem;
    background-color: #ffd1dc;
    border-radius: 50%;
    box-shadow: 0 0 0.2rem 0.02rem #b8b8b888;
    transition: 0.2s ease-in-out;
}

.button-fixed-tagBar-mode {
    transform: rotate(45deg);
    top: 4.5rem !important;
    transition: 0.42s ease-in-out;
}

.button-fixed:active {
    scale: 0.95;
}

.button-fixed>.wrapper-centering {
    flex-direction: column;
    gap: 0.2rem;
}

.line-h,
.line-v {
    position: absolute;
    border: 0.1rem solid white;
    border-radius: 0.1rem;
    width: 1.2rem;
}

.line-h {
    transform: rotate(90deg);
}

/* navigation navbar */

.navbar {
    position: fixed;
    bottom: 0;
    background-color: #fafafc;
    box-shadow: 0 0 0.05rem 0.02rem #b8b8b888;
    height: 3rem;
    padding: 1rem;
    overflow: hidden;
}

.navbar-item {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.hamburger-lines {
    background-color: #ffd1dc;
    border: 0.08rem solid #ffd1dc;
    border-radius: 0.15rem;
    width: 1rem;
}

.hamburger-lines:nth-child(2) {
    width: 0.95rem;
}

/* modals */

#dialog-settings-tasks {
    position: absolute;
    top: 3rem;
    left: auto;
    right: 1rem;
    padding: 1rem;
    border-radius: 0.5rem;
    text-wrap: nowrap;
    background-color: #ffe9ee;
    border: none;
    box-shadow: 0 0.1rem 0.5rem 0.05rem #b8b8b888;
    z-index: 1;
}

#dialog-categories {
    position: absolute;
    top: 6rem;
    padding: 1rem;
    border-radius: 0.5rem;
    background-color: #ffe9ee;
    border: none;
    box-shadow: 0 0.1rem 0.5rem 0.05rem #b8b8b888;
}

#dialog-categories::-webkit-scrollbar,
.to-do-container::-webkit-scrollbar {
    display: none;
}

.dialog-fade-in[open] {
    animation: fade-in 200ms forwards;
}

.dialog-fade-out {
    display: block;
    animation: fade-out 200ms forwards;
}

.dialog-btn {
    text-align: start;
    word-break: break-all;
}

#addNewTaskModal {
    max-height: 80vh;
}

.modal {
    position: fixed;
    top: 6rem;
    margin: 0 auto;
    width: 100%;
    border-radius: 0.5rem;
    border: none;
    padding: 1rem 1.2rem;
}

.dialog-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}

.dialog-wrapper p {
    display: flex;
}

.dialog-wrapper:nth-child(1),
.dialog-wrapper:nth-child(3) {
    font-weight: bold;
}

.dialog-wrapper div {
    display: flex;
    flex-direction: row;
    gap: 3rem;
}

.dialog-wrapper span {
    background-color: #ffd1dc;
    padding: 0.5rem 1rem;
    border-radius: 1rem;
}

.dialog-wrapper button:nth-child(1) {
    background-color: #ff000080;
    color: white;
}

.dialog-wrapper button:nth-child(2) {
    background-color: #b8d8be;
    color: white;
}

.newToDoForm {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.newToDoForm>div {
    display: flex;
    align-items: center;
    justify-content: start;
    gap: 0.5rem;
}

.newToDoForm>div>button,
.addNewCategoryContainer button,
.btn,
.deleteToDo {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.75rem;
    padding: 0.33rem 0.66rem;
    border-radius: 1rem;
    background-color: #eaeaea;
    color: #a8a8a8;
    width: 4.5rem;
    height: 1.75rem;
}

.newToDoFormButtonWrapper .btn-small {
    width: 3rem;
}

#btn-removeToDo {
    background-color: #ff000080;
}

#btn-addCategoryTag {
    background-color: #ffd1dc;
    color: #000;
    min-width: fit-content;
}

#btn-submitToDo {
    margin-left: auto;
    background-color: #b8d8be;
}

#btn-submitToDo path {
    stroke: #ffffff;
}

svg>path {
    stroke: #ffd1dc;
}

.addNewTaskInput {
    width: 100%;
    padding: 1rem 0.8rem;
    border-radius: 0.5rem;
    border: none;
    background-color: #eaeaea;
}

.newSubtasksContainer,
.newSubtasksWrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: 0.5rem;
}

.newSubtaskItem {
    display: flex;
    width: 100%;
}

.newSubtaskItem input {
    border-radius: 0.5rem 0 0 0.5rem;
}

.newSubtaskItem button {
    min-width: 3rem;
    border-radius: 0.5rem;
    border-radius: 0 0.5rem 0.5rem 0;
}

.moreSubtasksButtonContainer {
    justify-content: center !important;
    padding: 0 0 0.5rem;
}

.moreSubtasksButtonContainer>button.moreSubtasksButton {
    display: flex;
    padding: 1rem;
    background-color: inherit;
}

.moreSubtasksButton {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.2rem;
}



.moreSubtasksButton>div>div,
.moreSubtasksButton>div>div>div {
    height: 0.1rem;
    width: 0.5rem;
    border-radius: 0.05rem;
    background-color: #ffd1dc;
}

.moreSubtasksButton>div>div>div {
    transform: rotate(90deg);
}

.addNewTaskInput:focus,
.addNewCategoryInput:focus {
    outline: none;
}

.fade-in {
    animation: fade-in 0.2s ease-in-out forwards ;
}

.fade-out {
    animation: fade-out 0.2s ease-in-out forwards;
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes fade-out {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

.upAndRotate {
    animation: slideUpAndRotate 420ms forwards;
}

.downAndRotate {
    animation: slideDownAndRotate 420ms forwards;
}

@keyframes slideUpAndRotate {
    from {
        bottom: 4.5rem;
        transform: rotate(0deg);
    }

    to {
        bottom: calc(100% - 7.3rem);
        transform: rotate(45deg);
    }
}

@keyframes slideDownAndRotate {
    from {
        bottom: calc(100% - 7.3rem);
        transform: rotate(45deg);
    }

    to {
        bottom: 4.5rem;
        transform: rotate(0deg);
    }
}

@media only screen and (max-width: 300px) {
    .newToDoFormButtonWrapper button {
        flex: 1;
    }
}

@media only screen and (max-width: 370px) {

    #btn-submitToDo {
        flex: auto;
    }
}