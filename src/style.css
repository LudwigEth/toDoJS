@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

:root {
    --primary-color: #ffd1dc;
    --secondary-color: #b8d8be;
    --background-color-primary: #fafafa;
    --background-color-secondary: #eaeaea;
    --box-and-settings-gray: #b8b8b8;
    --text-color-gray: #a8a8a8;
    --primary-text-color: #000000;
    --secondary-text-color: #ffffff;
    --checkbox-color: #ffffff;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    display: flex;
    flex-direction: column;
    height: 100vh;
    font-family: 'Roboto', sans-serif;
    letter-spacing: -0.025rem;
    background-color: var(--background-color-primary);
}

button {
    border: none;
    background-color: inherit;
    cursor: pointer;
}

button,
button:active,
button:focus,
.checkbox {
    -webkit-tap-highlight-color: transparent;
}

li button {
    color: var(--primary-text-color);
}

li::marker {
    color: var(--primary-color);
    font-size: 0.9rem;
}

input {
    caret-color: var(--primary-color);
}

.no-scroll {
    overflow: hidden;
}


/* colors */

.primary-color {

}

.secondary-color {

}

/* wrappers */

.wrapper-content {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: auto;
    width: 100%;
    background-color: var(--background-color-primary);
}

.blur {
    filter: blur(0.05rem);
    opacity: 0.5;
    transition: filter 0.2s ease-in-out !important;
}

.wrapper-centering {
    display: flex;
    justify-content: center;
    align-items: center;
}

.wrapper-dialog {
    display: flex;
    flex-direction: column;
    justify-content: start;
    gap: 1.2rem;
}

.wrapper-modal-categories {
    display: flex;
    flex-direction: column;
    max-width: 10rem;
    max-height: 8rem;
    gap: 1rem;
    justify-content: start;
    scrollbar-width: none;
    -ms-overflow-style: none;
    word-break: break-all;
}

.wrapper-modal-categories::-webkit-scrollbar {
    display: none;
}

.newToDoFormButtonWrapper {
    position: relative;
    display: flex;
    flex-wrap: wrap;
}

.main {
    padding-top: 3.5rem;
    transition: all 0.2s ease-in-out;
}

.tag-bar-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    position: fixed;
    top: 0;
    width: 100%;
    padding-top: 1rem;
    padding-bottom: 0.5rem;
    z-index: 3;
    background-color: var(--background-color-primary);
    box-shadow: 0 0.15rem 0.2rem var(--background-color-primary);
}

.tag-bar-container > div {
    display: flex;
    width: 100%;
    justify-content: center;
    align-items: center;
}

.tag-bar-container > div:last-child {
    color: var(--primary-text-color);
}

.due-date-filter path {
    fill: var(--primary-text-color);
}

.due-date-filter > span {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 2rem;
    height: 2rem;
}

.dd-container-scroll-h {
    display: flex;
    align-items: center;
    width: 5rem;
    height: 2rem;
    overflow-x: auto;
    overflow-y: hidden;
    font-size: 0.9rem;
    scroll-snap-type: x mandatory;
}

.dd-container-scroll-h > div {
    min-width: 100%;
    display: flex;
    justify-content: center;
    scroll-snap-align: start;
}

.tag-bar-container,
.container-scroll-h,
.scroll-item-container,
.container-settings,
.main,
.navbar,
.navbar-item {
    display: flex;
    align-items: center;
    width: 100%;
}

.scroll-item-container {
    gap: 1rem;
}

/* scrollable container */

.container-scroll-h {
    justify-content: flex-start;
    flex: auto;
    overflow-x: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
    padding-left: 1.2rem;
}

.container-scroll-h::-webkit-scrollbar,
.dd-container-scroll-h::-webkit-scrollbar {
    display: none;
}

.scroll-item {
    flex: 0 0 auto;
}

.active-tag {
    background-color: var(--secondary-color) !important;
    transition: 0.1s ease-in-out;
}

.scroll-item button {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 0.1rem;
    background-color: var(--primary-color);
    border-radius: 1rem;
    padding: 0.33rem 0.66rem;
    font-size: 0.75rem;
    transition: 0.1s ease-in-out;
}

.scroll-item button div {
    width: 0.69rem;
    background-color: #ff000080;
}

.addNewCategoryContainer {
    position: relative;
    min-width: 100%;
    padding-right: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.addNewCategoryContainer button:last-child {
    background-color: var(--secondary-color);
}

.addNewCategoryContainer button:active {
    scale: 0.96;
    transition: 0.3s ease-in-out;
}

.addNewCategoryContainer path {
    stroke: #000;
}

.grower {
    background-color: inherit;
    min-width: 0;
    transition: 0.2s ease-in-out;
}

.grow {
    min-width: 100%;
    transition: 0.2s ease-in-out;
}

.addNewCategoryInput {
    width: 100%;
    background-color: var(--background-color-secondary);
    color: var(--primary-text-color);
    border: none;
    height: 2rem;
    border-radius: 1rem;
    padding: 0 1rem;
}


.delete-button {
    display: flex;
    justify-content: center;
    align-items: center;
    max-width: fit-content;
    background-color: var(--primary-color) !important;
}

.delete-button-l1,
.delete-button-l2 {
    height: 0.1rem;
    width: 1rem;
    background-color: var(--secondary-text-color);
    border-radius: 0.05rem;
}

.delete-button-l1 {
    transform: rotate(45deg);
}

.delete-button-l2 {
    transform: rotate(90deg);
}

/* settings container */

.container-settings {
    justify-content: center;
    position: relative;
    display: flex;
    max-width: 2.2rem;
    box-shadow: -0.5rem 0 0.5rem -0.2rem var(--background-color-primary);
    border-left: 0.1rem solid var(--box-and-settings-gray);
    border-radius: 0.1rem;
    margin-left: auto;
}

.button-settings,
.button-menu,
.button-todo,
.button-calendar {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: 0.1s;
    height: 2rem;
    width: 2rem;
}

.button-menu:active,
.button-todo:active,
.button-calendar:active {
    background-color: var(--primary-color);
    padding: 2rem;
}

.hamburger-menu-dots,
.hamburger-menu-lines {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 0.2rem;
    border-radius: 50%;
    pointer-events: none;
    transition: 0.2s ease-in-out;
}

.spread {
    gap: 0.42rem;
    transition: 0.2s ease-in-out;
}

.hamburger-dots {
    border: 0.125rem solid var(--box-and-settings-gray);
    border-radius: 50%;
}

/* main & to-do's */

main.wrapper-content {
    justify-content: start;
    align-items: start;
}

.to-do-container {
    display: flex;
    flex-direction: column;
    padding: 0 1.2rem 10rem;
    gap: 0.5rem;
    overflow: scroll;
    max-height: calc(100vh - 6rem);
    scroll-behavior: smooth;
}

.to-do-container:first-child {
    padding-top: 0.5rem;
}

.to-do-container,
.to-do-card {
    width: 100%;
}

.to-do-card {
    display: flex;
    align-items: center;
    justify-content: start;
    gap: 0.5rem;
    background-color: var(--background-color-secondary);
    color: var(--primary-text-color);
    border-radius: 0.5rem;
    padding: 1rem 0.5rem;
}

.checkbox {
    display: flex;
    align-items: center;
    justify-items: center;
    margin: auto;
    min-width: 1.2rem;
    min-height: 1.2rem;
    border: 0.0625rem solid var(--primary-color);
    background-color: var(--checkbox-color);
    border-radius: 0.2rem;
    position: relative;
    cursor: pointer;
}

@keyframes draw {
    from {
        stroke-dasharray: 0, 100;
    }
    to {
        stroke-dasharray: 100, 0;
    }
  }
  
  .checkbox.checked .checkmark {
    stroke-dasharray: 0, 100;
    stroke: var(--secondary-text-color);
    animation: draw 0.42s ease-in-out forwards;
  }

.checkbox.checked {
    background-color: var(--primary-color);
    transition: 0.125s ease;
}

.to-do-card .to-do-menu {
    display: flex;
    align-self: flex-start;
    justify-content: center;
    padding: 0;
    min-height: 1.2rem;
    min-width: 1.2rem;
}

.to-do-menu .hamburger-dots {
    border-color: var(--primary-color);
}

.to-do-task-container {
    display: flex;
    flex-direction: column;
    flex: auto;
}

.to-do-task {
    font-weight: 500;
    font-size: 0.9rem;
    word-break: break-all;
}

.to-do-subtask {
    padding-left: 2rem;
    padding-top: 0.5rem;
}

.to-do-subtask button {
    position: relative;
    overflow: hidden;
    transition: 0.2s ease-in-out;
}

.to-do-subtask button::after {
    content: '';
    position: absolute;
    left: 0;
    top: 45%;
    width: 100%;
    height: 0.1rem;
    background: var(--secondary-color);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.2s ease-in-out;
}

.subtask-done {
    opacity: 0.9;
    transition: 0.1s ease-in-out;
}


.hidden {
    display: none !important;
    opacity: 0;
}

.to-do-subtask button.subtask-done::after {
    transform: scaleX(1);
}



/* floating add new task button */

.button-fixed {
    position: fixed;
    bottom: 4.5rem;
    right: 1.3rem;
    height: 3rem;
    width: 3rem;
    background-color: var(--primary-color);
    border-radius: 50%;
    box-shadow: 0 0 0.2rem 0.02rem var(--box-and-settings-gray);
    transition: 0.2s ease-in-out;
    outline: none;
    z-index: 2;
}


.button-fixed-tagBar-mode {
    transform: rotate(45deg);
    top: 4.5rem !important;
    transition: 0.42s ease-in-out;
}

.button-fixed:active {
    scale: 0.95;
}

.button-fixed>.wrapper-centering {
    flex-direction: column;
    gap: 0.2rem;
}

.line-h,
.line-v {
    position: absolute;
    border: 0.09rem solid var(--secondary-text-color);
    border-radius: 0.1rem;
    width: 1.2rem;
}

.line-h {
    transform: rotate(90deg);
}

/* navigation navbar */

.navbar {
    position: fixed;
    bottom: 0;
    background-color: var(--background-color-primary);
    box-shadow: 0 0 0.05rem 0.02rem var(--box-and-settings-gray);
    height: 3rem;
    padding: 1rem;
    overflow: hidden;
    z-index: 2;
}

.navbar-item {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.hamburger-lines {
    border: 0.08rem solid var(--primary-color);
    border-radius: 0.15rem;
    width: 1rem;
}

.hamburger-lines:nth-child(2) {
    width: 0.95rem;
}

/* navbar side menu */

.navbar-menu-dialog {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    position: fixed;
    padding-top: 3.5rem;
    padding-bottom: 2rem;
    left: -14rem;
    width: 14rem;
    min-height: 100dvh;
    background-color: var(--background-color-primary);
    border: none;
    transition: left 0.1s ease-in-out;
}

.navbar-menu-dialog hr {
    width: 10rem;
    border: 0.05rem solid var(--box-and-settings-gray);
    border-radius: 0.05rem;
    align-self: center;
}

.navbar-menu-header {
    position: absolute;
    top: 1rem;
    width: 100%;
    height: 4rem;
    display: flex;
    flex-direction: column;
}

.navbar-menu-header h2 {
    font-size: 1.2rem;
    color: var(--secondary-color);
    padding-bottom: 1rem;
    padding-left: 2rem;
    padding-right: 1rem;
}

.navbar-menu-header h2 span {
    color: var(--primary-color);
}

.navbar-menu-items {
    display: flex;
    flex-direction: column;
    padding-bottom: 3rem;
    gap: 1rem;
}

.navbar-menu-items > div:first-of-type {
    margin-top: 1rem;
}

.primary-pink {
    background-color: #ffd1dc;
}

.primary-green {
    background-color: #b8d8b8;
}

.primary-blue {
    background-color: lightblue;
}

.primary-purple {
    background-color: #e0d6ff;
}

.secondary-pink {
    background-color: #fea6ba;
}

.secondary-green {
    background-color: #94d294;
}

.secondary-blue {
    background-color: #68c0dd;
}

.secondary-purple {
    background-color: #9f81f9;
}

.color-palette {
    display: flex;
    justify-content: space-between;
    padding-top: 0.25rem;
}

.color-choice {
    position: relative;
    width: 1rem;
    height: 1rem;
    border-radius: 0.5rem;
}

.option-chosen::after {
    content: '';
    position: absolute;
    top: 1.2rem;
    left: 0;
    width: 100%;
    height: 0.1rem;
    border-radius: 0.1rem;
    background-color: var(--primary-text-color);
}

.dropdown .dropdown-open svg {
    transform: rotate(-90deg);
    transition: 0.1s ease-in-out;
}

.dropdown-open path {
    fill: var(--primary-color);
}

.color-transition, .color-transition * {
    transition: 0s !important;
}

.dropdown {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%;
    transition: 0.2s ease-in-out;
}

.dropdown > div,
.dropdown > section {
    padding: 0 2rem;
}

.dropdown > section > * {
    padding-left: 0.5rem;
}

.dropdown > section {
    display: flex;
    position: relative;
    gap: 0.5rem;
    flex-direction: column;
    color: var(--primary-text-color);
    overflow: hidden;
    height: 0;
    transition: 0.1s ease-in-out;
}

#language-selection.section-open {
    height: 3.3rem;
}

#color-theme.section-open {
    height: 6rem;
}

.dropdown > :first-child {
    width: 100%;
    height: 2rem;
    display: flex;
    justify-content: space-between;
    color: var(--primary-text-color);
}

.dropdown svg {
    fill: var(--box-and-settings-gray);
    transform: rotate(90deg);
    transition: 0.1s ease-in-out;
}

.darkmode-container {
    position: absolute;
    bottom: 0;
    width: 100%;
    opacity: 0.8;
    height: 3rem;
    padding-left: 2rem;
}



.svg-moon {
    height: 1.5rem;
}

.svg-moon-path {
    fill: var(--primary-text-color);
}

.side-menu-open {
    transition: 0.1s ease-in-out;
    left: 0;
}

/* modals */

.calendar {
    display: flex;
    flex-direction: column;
    position: fixed;
    height: 100vh;
    width: 100%;
    background-color: lightgray;
    z-index: 2;
    border: none;
}

#dialog-settings-tasks {
    position: absolute;
    top: 3rem;
    left: auto;
    right: 1rem;
    padding: 1rem;
    border-radius: 0.5rem;
    text-wrap: nowrap;
    background-color: var(--primary-color);
    border: none;
    box-shadow: 0 0.05rem 0.1rem 0.05rem var(--box-and-settings-gray);
    z-index: 1;
}

#dialog-categories {
    position: absolute;
    top: 6rem;
    padding: 1rem;
    border-radius: 0.5rem;
    background-color: var(--primary-color);
    border: none;
    box-shadow: 0 0 max(1px, 0.01rem) max(1px, 0.01rem) var(--box-and-settings-gray);
}

#dialog-categories::-webkit-scrollbar,
.to-do-container::-webkit-scrollbar {
    display: none;
}

.dialog-fade-in[open] {
    animation: fade-in 0.1s forwards;
}

.dialog-fade-out {
    display: block;
    animation: fade-out 0.1s forwards;
}

.dialog-btn {
    text-align: start;
    word-break: break-all;
}

#addNewTaskModal {
    max-height: 80vh;
}

.modal {
    position: fixed;
    top: 6rem;
    margin: 0 auto;
    width: 100%;
    border-radius: 0.5rem;
    border: none;
    padding: 1rem 1.2rem;
    background-color: var(--background-color-primary);
    animation: fade-in 0.1s forwards;
}

#dialog-remove-todo {
    width: fit-content;
}

.dialog-wrapper {
    font-size: 0.9rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    color: var(--primary-text-color);
}

.dialog-wrapper p {
    display: flex;
}

.dialog-wrapper:nth-child(1),
.dialog-wrapper:nth-child(3) {
    font-weight: bold;
}

.dialog-wrapper div {
    display: flex;
    flex-direction: row;
    gap: 3rem;
}

.dialog-wrapper span {
    background-color: var(--primary-color);
    padding: 0.5rem 1rem;
    border-radius: 1rem;
    color: #000;
}

.dialog-wrapper button:nth-child(1) {
    background-color: #ff000080;
    color: #000;
}

.dialog-wrapper button:nth-child(2) {
    background-color: var(--secondary-color);
    color: #000;
}

.newToDoForm {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.newToDoForm>div {
    display: flex;
    align-items: center;
    justify-content: start;
    gap: 0.5rem;
}

.newToDoForm>div>button,
.addNewCategoryContainer button,
.btn,
.deleteToDo {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.75rem;
    padding: 0.33rem 0.66rem;
    border-radius: 1rem;
    background-color: var(--background-color-secondary);
    color: var(--text-color-gray);
    width: 4.5rem;
    height: 1.75rem;
}

.newToDoFormButtonWrapper .btn-small {
    width: 3rem;
}

#btn-removeToDo {
    background-color: #ff000080;
}

#btn-addCategoryTag {
    background-color: var(--primary-color);
    color: #000;
    min-width: fit-content;
}

#btn-submitToDo {
    margin-left: auto;
    background-color: var(--secondary-color);
}

#btn-submitToDo path {
    stroke: #000;
}

.path-color {

}

.addNewTaskInput {
    width: 100%;
    padding: 1rem 0.8rem;
    border-radius: 0.5rem;
    border: none;
    background-color: var(--background-color-secondary);
    color: var(--primary-text-color);
}

.newSubtasksContainer,
.newSubtasksWrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: 0.5rem;
}

.newSubtasksContainer {
    max-height: 30vh;
    overflow: auto;
}

.newSubtaskItem {
    display: flex;
    width: 100%;
}

.newSubtaskItem input {
    border-radius: 0.5rem 0 0 0.5rem;
    color: var(--primary-text-color);
}

.newSubtaskItem button {
    min-width: 3rem;
    border-radius: 0.5rem;
    border-radius: 0 0.5rem 0.5rem 0;
}

.moreSubtasksButtonContainer {
    justify-content: center !important;
    padding: 0 0 0.5rem;
}

.moreSubtasksButtonContainer>button.moreSubtasksButton {
    display: flex;
    padding: 1rem;
    background-color: inherit;
    color: var(--primary-text-color);
}

.moreSubtasksButton {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.2rem;
}



.moreSubtasksButton>div>div,
.moreSubtasksButton>div>div>div {
    height: 0.1rem;
    width: 0.5rem;
    border-radius: 0.05rem;
    background-color: var(--primary-color);
}

.moreSubtasksButton>div>div>div {
    transform: rotate(90deg);
}

.addNewTaskInput:focus,
.addNewCategoryInput:focus {
    outline: none;
}

.fade-in {
    animation: fade-in 0.1s ease-in-out forwards ;
}

.fade-out {
    animation: fade-out 0.1s ease-in-out forwards;
}


@keyframes fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes fade-out {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

.upAndRotate {
    animation: slideUpAndRotate 420ms forwards;
}

.downAndRotate {
    animation: slideDownAndRotate 420ms forwards;
}

@keyframes slideUpAndRotate {
    from {
        bottom: 4.5rem;
        transform: rotate(0deg);
    }

    to {
        bottom: calc(100% - 7.3rem);
        transform: rotate(45deg);
    }
}

@keyframes slideDownAndRotate {
    from {
        bottom: calc(100% - 7.3rem);
        transform: rotate(45deg);
    }

    to {
        bottom: 4.5rem;
        transform: rotate(0deg);
    }
}

@media only screen and (max-width: 300px) {
    .newToDoFormButtonWrapper button {
        flex: 1;
    }
}

@media only screen and (max-width: 370px) {

    #btn-submitToDo {
        flex: auto;
    }
}